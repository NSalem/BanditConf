
%% sigmoid 

modelsinfo{1} = struct(...
    'paramnames',{{'beta','lrm'}},...
    'choiceRule','Sigmoid',...
    'lb',[0,0],'ub', [Inf,1],'x0', [1,.5,]... 
    );


%% Thompson
modelsinfo{2} = struct(...
    'paramnames',{{'beta','lrm','lrv'}},...
    'choiceRule','Thompson',...
    'lb',[0,0,0],'ub', [Inf,1,1],'x0', [1,.5,.5]... 
    );
%% SAT
modelsinfo{3} = struct(...
    'paramnames',{{'beta','lrm','lrv','T'}},...
    'choiceRule','SAT',...
    'lb',[0,0,0,0],'ub', [Inf,1,1,100],'x0', [1,.5,.5,50]... 
    );

%% Sigmoid-T
modelsinfo{4} = struct(...
    'paramnames',{{'beta','lrm','T'}},...
    'choiceRule','Sigmoid',...
    'lb',[0,0,0],'ub', [Inf,1,100],'x0', [1,.5,50],... 
    'drift',true);

%% Thompson-T
    modelsinfo{5} = struct(...
    'paramnames',{{'beta','lrm','lrv','T'}},...
    'choiceRule','Thompson',...
    'lb',[0,0,0,0],'ub', [Inf,1,1,100],'x0', [1,.5,.5,50],...
    'drift',true...
    );
%% SAT-T

modelsinfo{6} = struct(...
    'paramnames',{{'beta','lrm','lrv','T'}},...
    'choiceRule','SAT',...
    'lb',[0,0,0,0],'ub', [Inf,1,1,100],'x0', [1,.5,.5,50],...
    'drift',true...
    );



priorfuncs.beta = '@(x) log(gampdf(x,1.2,5))';
priorfuncs.lrm = '@(x) log(betapdf(x,1.1,1.1))';
priorfuncs.lrm2 = priorfuncs.lrm; 
priorfuncs.lrv = priorfuncs.lrm; 
priorfuncs.lrv2 = priorfuncs.lrm; 
priorfuncs.T = '@(x) log(betapdf(x/100,1.1,1.1))';
% priorfuncs.lambda = '@(x) log(gampdf(x,.08,41.46))';
    
for imodel = 1:numel(modelsinfo)
    for iparam = 1:numel(modelsinfo{imodel}.paramnames)
        thisParamName = modelsinfo{imodel}.paramnames{iparam};
        modelsinfo{imodel}.priorfuncs.(thisParamName) = priorfuncs.(thisParamName);
    end
     modelsinfo{imodel}.Q = [50,50];
     modelsinfo{imodel}.V = [10,10];
end
